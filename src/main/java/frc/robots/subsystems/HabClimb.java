// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robots.subsystems;


import frc.robots.RobotMap;
import frc.robots.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class HabClimb extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private DoubleSolenoid frontHabClimbers;
    private DoubleSolenoid rearHabClimbers;
    private WPI_VictorSPX habClimberWheelOnLift;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public HabClimb() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        frontHabClimbers = new DoubleSolenoid(0, 0, 1);
        addChild("FrontHabClimbers",frontHabClimbers);

        WPI_VictorSPX habClimberWheelOnLift = new WPI_VictorSPX(RobotMap.HAB_CLIMB_WHEEL_CAN_ID);
        
        
        rearHabClimbers = new DoubleSolenoid(0, 2, 3);
        addChild("RearHabClimbers",rearHabClimbers);

        WPI_TalonSRX liftWheelTalon = new WPI_TalonSRX(RobotMap.HAB_CLIMB_WHEEL_CAN_ID);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        setDefaultCommand(new HabWheelOnLiftCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    public void setFrontSolenoid(DoubleSolenoid.Value direction) {
        frontHabClimbers.set(direction);
    }

    public void setBackSolenoid(DoubleSolenoid.Value direction) {
        rearHabClimbers.set(direction);
    }

    public boolean isFrontHabClimbDown() {
        if(frontHabClimbers.get() == Value.kForward) {
            return true;
        }
        return false;
    }

    public boolean isBackHabClimbDown() {
        if(rearHabClimbers.get() == Value.kForward) {
            return true;
        }
        return false;
    }

    public void setHabClimbWheelTalonPercentOutput(double output) {
        habClimberWheelOnLift.set(ControlMode.PercentOutput, output);
    }



}

